{"version":3,"sources":["assets/img/site-divisor-svg.svg","assets/img/poster-home4.jpg","components/Nav/index.js","components/Header/index.js","components/NextEvents/index.js","components/App/index.js","serviceWorker.js","index.js"],"names":["module","exports","Nav","className","role","aria-label","class","aria-expanded","data-target","aria-hidden","id","href","src","divisor","Header","poster","alt","NextEvents","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8EAAAA,EAAOC,QAAU,IAA0B,8C,kBCA3CD,EAAOC,QAAU,IAA0B,0C,2OCgD5BC,EA3CH,kBACR,yBAAKC,UAAU,sBAAsBC,KAAK,aAAaC,aAAW,mBAC9D,yBAAKC,MAAM,gBACP,uBAAGF,KAAK,SAASE,MAAM,uBAAuBD,aAAW,OAAOE,gBAAc,OAAOC,cAAY,sBAC7F,0BAAMC,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,SAClB,0BAAMA,cAAY,WAG1B,yBAAKC,GAAG,qBAAqBP,UAAU,eACnC,yBAAKA,UAAU,gBACX,yBAAKA,UAAU,yCACX,uBAAGA,UAAU,cAAcQ,KAAK,KAAhC,SACA,yBAAKR,UAAU,mBACX,uBAAGA,UAAU,cAAcQ,KAAK,KAAhC,wBACA,uBAAGR,UAAU,cAAcQ,KAAK,KAAhC,aAGR,yBAAKR,UAAU,yCACX,uBAAGA,UAAU,cAAcQ,KAAK,KAAhC,kBACA,yBAAKR,UAAU,mBACX,uBAAGA,UAAU,cAAcQ,KAAK,KAAhC,aACA,uBAAGR,UAAU,cAAcQ,KAAK,KAAhC,aACA,uBAAGR,UAAU,cAAcQ,KAAK,KAAhC,eAIR,uBAAGR,UAAU,cAAcQ,KAAK,KAAhC,WACA,uBAAGR,UAAU,cAAcQ,KAAK,KAAhC,YACA,uBAAGR,UAAU,cAAcQ,KAAK,KAAhC,SAGJ,yBAAKR,UAAU,cACX,yBAAKA,UAAU,eACX,yBAAKS,IAAKC,W,gBCdfC,EApBA,kBACX,4BAAQX,UAAU,UACd,kBAAC,EAAD,MACA,yBAAKA,UAAU,iBAAiBS,IAAKG,IAAQC,IAAI,KACjD,6BAASb,UAAU,gBACf,oZAMA,4WCNGc,G,MARI,kBACf,iCACI,sDCWOC,G,MARH,kBACV,yBAAKf,UAAU,aACb,kBAAC,EAAD,MACA,yBAAKA,UAAU,UAAUS,IAAKC,IAASG,IAAI,0BAC3C,kBAAC,EAAD,SCDgBG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.4d36973e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/site-divisor-svg.bde26656.svg\";","module.exports = __webpack_public_path__ + \"static/media/poster-home4.243fa24e.jpg\";","import React from 'react';\nimport './nav.css';\n\nimport divisor from '../../assets/img/site-divisor-svg.svg'\n\nconst Nav = () => (\n    <nav className=\"navbar is-fixed-top\" role=\"navigation\" aria-label=\"main navigation\">\n        <div class=\"navbar-brand\">\n            <a role=\"button\" class=\"navbar-burger burger\" aria-label=\"menu\" aria-expanded=\"true\" data-target=\"navbarBasicExample\">\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>                \n                <span aria-hidden=\"true\"></span>\n                <span aria-hidden=\"true\"></span>\n            </a>\n        </div>\n        <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n            <div className=\"navbar-start\">\n                <div className=\"navbar-item has-dropdown is-hoverable\">\n                    <a className=\"navbar-link\" href=\"#\">Sobre</a>\n                    <div className=\"navbar-dropdown\">\n                        <a className=\"navbar-item\" href=\"#\">Código de Conduta</a>\n                        <a className=\"navbar-item\" href=\"#\">Contato</a>\n                    </div>\n                </div>\n                <div className=\"navbar-item has-dropdown is-hoverable\">\n                    <a className=\"navbar-link\" href=\"#\">Conferência</a>\n                    <div className=\"navbar-dropdown\">\n                        <a className=\"navbar-item\" href=\"#\">WiDS 2019</a>\n                        <a className=\"navbar-item\" href=\"#\">WiDS 2018</a>\n                        <a className=\"navbar-item\" href=\"#\">WiDS 2017</a>\n                        \n                    </div>\n                </div>\n                <a className=\"navbar-item\" href=\"#\">Meetups</a>\n                <a className=\"navbar-item\" href=\"#\">Dathaton</a>\n                <a className=\"navbar-item\" href=\"#\">Blog</a>\n            </div>\n\n            <div className=\"navbar-end\">\n                <div className=\"navbar-item\">\n                    <img src={divisor} />\n                </div>\n            </div>\n        </div>\n    </nav>\n);\n\nexport default Nav;","import React from 'react';\nimport './header.css';\nimport Nav from '../Nav';\n\nimport poster from '../../assets/img/poster-home4.jpg'\n\n\nconst Header = () => (\n    <header className=\"header\">\n        <Nav />\n        <img className=\"header__poster\" src={poster} alt=\"\" />\n        <section className=\"header__text\">\n            <p>\n                WiDS (regional event name) is an independent event organized by [name of Ambassador(s) or Ambassador organization] to \n                coincide with the annual Global Women in Data Science (WiDS) Conference held at Stanford University and an estimated 150+ \n                locations worldwide. All genders are invited to attend WiDS regional events, which features outstanding women doing outstanding\n                work.\n            </p>\n            <p>\n                The Global WiDS Conference aims to inspire and educate data scientists worldwide, regardless of gender, and to support women \n                in the field. This one-day technical conference provides an opportunity to hear about the latest data science related research and \n                applications in a number of domains, and connect with others in the field.\n            </p>\n        </section>\n    </header>\n);\n\nexport default Header;","import React from 'react';\nimport './next-events.css';\n\n\nconst NextEvents = () => ( \n    <section>\n        <h1>Próximos Eventos</h1>\n\n        \n    </section>\n);\n\nexport default NextEvents;\n","import React from 'react';\nimport './app.css';\n\nimport Header from '../Header'\nimport NextEvents from '../NextEvents';\n\nimport '../../assets/lib/bulma.css'\nimport divisor from '../../assets/img/site-divisor-svg.svg'\n\nconst App = () => (\n  <div className=\"container\">\n    <Header />\n    <img className=\"divisor\" src={divisor} alt=\"Formas geométricas\" />\n    <NextEvents />\n  </div>\n)\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n// import './i18n';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}